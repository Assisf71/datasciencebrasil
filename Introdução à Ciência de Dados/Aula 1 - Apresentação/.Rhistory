install.packages("beepr")
install.packages("dplyr")
install.packages("doMC")
install.packages("ggplot2")
install.packages("forecast")
install.packages("data.table")
install.packages("lubridate")
install.packages("devtools")
install.packages("devtools")
# Catboosty
devtools::install_github('catboost/catboost', subdir = 'catboost/R-package')
library(forecast)
install.packages("forecast")
library(forecast)
ls("package:forecast")
?tsCV
library(lightgbm)
library(data.table)
library(lubridate)
library(dplyr)
library(doMC)
library(foreach)
library(MLmetrics)
detectCores()
getwd()
install.packages("DoParallel")
install.packages("doParallel")
library(doParallel)
ls("package:doParallel")
install.packages("prettydoc")
install.packages("keras")
install.packages("tidyverse")
library(RPostgreSQL)
setwd("~/Documents/Calltracker - Predictive Modeling")
# [1] Carregar driver
drv <- dbDriver("PostgreSQL")
# [2] Conectar ao db - [ PRODUCTION ]
con3 <- dbConnect(drv, dbname = "icarros", host="52.53.245.230", user="icarros",password="icarros2000")
con = dbConnect(drv, dbname = "icarros", host="54.219.143.124", user="icarros", password="icarros2000")
con = dbConnect(drv, dbname = "icarros", host="54.219.143.124", user="icarros", password="icarros2000")
con = dbConnect(drv, dbname = "icarros", host="54.219.143.124", user="icarros", password="icarros2000")
# [] Establish Connection with icarros db
drv = dbDriver("PostgreSQL")
con = dbConnect(drv, dbname = "icarros", host="54.219.143.124", user="icarros", password="icarros2000")
con = dbConnect(drv, dbname = "icarros", host="54.219.143.124", user="icarros", password="icarros2000")
con = dbConnect(drv, dbname = "icarros", host="54.219.143.124", user="icarros", password="icarros2000")
con = dbConnect(drv, dbname = "icarros", host="54.219.143.124", user="icarros", password="icarros2000")
con = dbConnect(drv, dbname = "icarros", host='52.67.183.31', user="icarros", password="icarros2000")
con = dbConnect(drv, dbname = "icarros", host='readonly.db.icarros.com.br', user="icarros", password="icarros2000")
# [] Establish Connection with icarros db
drv = dbDriver("PostgreSQL")
con = dbConnect(drv, dbname = "icarros", host='readonly.db.icarros.com.br', user="icarros", password="icarros2000")
con = dbConnect(drv, dbname = "icarros", host='readonly.db.icarros.com.br', user="icarros", password="icarros2000",port=5432)
setwd("~/Desktop/DS Brasil/datasciencebrasil/Introdução à Ciência de Dados/Aula 1 - Apresentação")
# [2] Inspecionar Dados
glimpse(raw.data)
library(dplyr)
library(data.table)
library(ggplot2)
library(ggthemes)
library(caTools)
set.seed(451)
setwd("~/Desktop/DS Brasil/datasciencebrasil/Introdução à Ciência de Dados/Aula 1 - Apresentação")
# [1] Ler Dados
raw.data = fread('hearts.csv')
# [1] Ler Dados
raw.data = fread('heart.csv')
# [2] Inspecionar Dados
glimpse(raw.data)
summary(raw.data)
# [3] Verificar valores faltantes
colSums(is.na(raw.data))
# [4] Checar distribuição da variável target
table(raw.data$target)
165 / (165 + 138)
# [5] Criar função para gerar gráficos
plot_density = function(variable, title) {
ggplot(raw.data, aes(x=variable, fill=as.factor(target)))+
geom_density(alpha = 0.7, color='white')+
theme_hc(bgcolor='darkunica')+
ggtitle(title)
}
plot_density(raw.data$age, title = 'Distribuição de Idade segmentada por Ataque Cardíaco')
plot_density(raw.data$ca, title = 'Ca vs Ataque Cardíaco')
# [6] Preparar set de treino e set de teste
raw.data = as.data.frame(raw.data)
splitr = sample.split(raw.data, SplitRatio = 0.7)
train  = subset(raw.data, splitr == TRUE)
test   = subset(raw.data, splitr == FALSE)
linear_model = lm(target ~ ., data = train)
summary(linear_model)
# [8] Avaliar modelo no set de teste
lin.pred = predict(linear_model, newdata=test)
table(test$target, lin.pred)
table(test$target, lin.pred >= 0.5)
table(test$target, lin.pred >= 0.5)
(33 + 52) / (33 + 52 + 7 + 17)
summary(linear_model)
